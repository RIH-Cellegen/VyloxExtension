Vylox Extension's Core


- What is Core in the Extension? What is it mean for me?

Core is the first Category of the system which Vylox Extension is built for. The Extension has 3 types:
	+ Core (Scripts and Tools, which can be accessed by any script and has global values which you
			can acces with special functions.)
	- Gear (Classes, which interact with Core's Scripts or with each other Classes inside Gear.)
	- Iron (Resources, Assets and other stuff, which relate to Gear or Core.)
All have their own uses in the system, which will make sure, that you'll have no problem creating new systems based
off of this one, or using the current system's resources as part of your game development.


- What can I use in Core?

On Core, we have some Scripts and Tools which you can familiarize yourself in here, if you don't know
what any of the Tools or Scripts are:
	- VEvent (Handles Scenes and Nodes in the Tree. If you want to add a child to a Node or remove one,
			  the system will give you functions to do that for you, and in exchange VEvent will remember
			  all the Scenes and Nodes being passed through it. This way, you can safely manipulate scenes
			  without having an error or crashing the program entirely. You can also make a list on what scene
			  to load, when met the conditions, this way you can make sure, that no other Nodes and Scenes will
			  load, except for the ones in a custom list, with their right conditions.)
	
	- VInput (Uses a custom Input system, where instead of relying on Godot's Input functions, it creates it's own
			  with even more uses, than ever! It has mouse and keyboard functions for pressing delay, double clicking,
			  click counting and conditions for pressing, helding and releasing.)
	
	- VScript (Provides custom functions and values, which can be used to make better calculations and avoid duplicate
			   code for several Classes or Scripts, which may work together. VScript has several enums to choose from,
			   when referencing, which Godot doesn't have by default. Any Script can use VScript to extend from. Even if
			   the Script does not extend from it, the Script could still access VScript, since VScript is autoloaded.)
	
	+ Common within all listed Scripts and Tools:
		- All of them are Autoloaded, meaning that the user can access it, the moment they are Autoloaded.
		- All of them extend to VScript, which is the "Heart" of the Core. Some people would call it "Heart Script".
		- Any Script can use VScript which can extend to and those Scripts could be built into custom systems of your
		  choise, however those custom systems would not be able to correspond properly with the original system, it 
		  may cause bugs, if not handled well. It'll need caution.
